{"version":3,"sources":["image.js","App.js","reportWebVitals.js","index.js"],"names":["Image","useEffect","document","getElementById","ctx","imageData","getContext","createImageData","data","combinations","combArray","r","g","b","push","random_rgba","i","length","random","Math","floor","putImageData","className","style","marginTop","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uLA8DeA,MAxDf,WAiDI,OAhDAC,qBAAU,WACN,GAAIC,UAAYA,SAASC,eAAe,YAAa,CAOjD,IANA,IACIC,EAEEC,GADND,EAFQF,SAASC,eAAe,YAExBG,WAAW,OACGC,gBAAgB,IAAK,KACrCC,EAAOH,EAAUG,KACnBC,EAuBZ,WAEI,IADA,IAAIC,EAAY,GACPC,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3B,IAAK,IAAIC,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3B,IAAK,IAAIC,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3BH,EAAUI,KAAW,MAANH,EAAYA,EAAI,EAAIA,GACnCD,EAAUI,KAAW,MAANF,EAAYA,EAAI,EAAIA,GACnCF,EAAUI,KAAW,MAAND,EAAYA,EAAI,EAAIA,GACnCH,EAAUI,KAAK,KAI3B,OAAOJ,EAnCgBK,GACVC,EAAI,EAAGA,EAAIR,EAAKS,OAAQD,GAAK,EAAG,CACrC,IAAIE,EAASC,KAAKC,MAAMD,KAAKD,SAAWV,EAAKS,QAAU,EAE9B,IAArBT,EAAKU,EAAS,IACdV,EAAKU,GAAUT,EAAaS,GAC5BV,EAAKU,EAAS,GAAKT,EAAaS,EAAS,GACzCV,EAAKU,EAAS,GAAKT,EAAaS,EAAS,GACzCV,EAAKU,EAAS,GAAKT,EAAaS,EAAS,KAEzCV,EAAKQ,GAAKP,EAAaO,GACvBR,EAAKQ,EAAI,GAAKP,EAAaO,EAAI,GAC/BR,EAAKQ,EAAI,GAAKP,EAAaO,EAAI,GAC/BR,EAAKQ,EAAI,GAAKP,EAAaO,EAAI,IAIvCZ,EAAIiB,aAAahB,EAAW,EAAG,OAyBnC,qBAAKiB,UAAU,MAAMC,MAAO,CAAEC,UAAW,IAAzC,SACI,wBAAQC,GAAG,gBChDRC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,K","file":"static/js/main.82759819.chunk.js","sourcesContent":["\nimport React, { useEffect } from 'react'\nimport './App.css';\n\n\n\nfunction Image() {\n    useEffect(() => {\n        if (document && document.getElementById(\"myCanvas\")) {\n            var c = document.getElementById(\"myCanvas\");\n            var ctx;\n            ctx = c.getContext(\"2d\");\n            const imageData = ctx.createImageData(256, 128);  //image Pixels\n            const data = imageData.data;\n            let combinations = random_rgba(); // combination Array\n            for (var i = 0; i < data.length; i += 4) {\n                let random = Math.floor(Math.random() * data.length) + 1;\n\n                if (data[random + 3] === 0) {\n                    data[random] = combinations[random] //red\n                    data[random + 1] = combinations[random + 1] // green\n                    data[random + 2] = combinations[random + 2] // blue\n                    data[random + 3] = combinations[random + 3]\n                } else {\n                    data[i] = combinations[i] //red\n                    data[i + 1] = combinations[i + 1] // green\n                    data[i + 2] = combinations[i + 2] // blue\n                    data[i + 3] = combinations[i + 3]\n                }\n\n            }\n            ctx.putImageData(imageData, 0, 0); //Updating Image\n        }\n    })\n\n\n    //combination Of Red ,Green ,Blue Array\n    function random_rgba() {\n        var combArray = [];\n        for (var r = 8; r <= 256; r += 8) {\n            for (var g = 8; g <= 256; g += 8) {\n                for (var b = 8; b <= 256; b += 8) {\n                    combArray.push(r === 256 ? r - 1 : r);\n                    combArray.push(g === 256 ? g - 1 : g);\n                    combArray.push(b === 256 ? b - 1 : b);\n                    combArray.push(255);\n                }\n            }\n        }\n        return combArray;\n    }\n\n\n\n\n    return (\n        <div className=\"App\" style={{ marginTop: 20 }}>\n            <canvas id=\"myCanvas\" />\n        </div>\n    );\n}\n\nexport default Image;\n","\nimport React from 'react';\nimport Image from '../src/image';\nfunction App() {\n  return (\n    <Image />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}